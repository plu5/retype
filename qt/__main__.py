# License: GPL v3 Copyright: 2021, Kovid Goyal <kovid at kovidgoyal.net>
# Modified by plu5

import importlib
import os
from pprint import pprint

# Re-run __main__.py to regenerate 'modules.pyi' and 'modules_name_map.py'
#  whenever this changes
QT_WRAPPER = 'PyQt5'

base = os.path.dirname(os.path.abspath(__file__))
modules = [
    'QtCore',
    'QtGui',
    'QtWidgets',
    'QtNetwork',
    'QtSvg',
    'QtPrintSupport',
]


def scan():
    name_map = {}
    types = []
    for mod_name in modules:
        mod = importlib.import_module(f'{QT_WRAPPER}.{mod_name}')
        full_name = name_map[mod_name] = mod.__name__
        types.append(f'import {full_name}')
        for obj_name in sorted(dir(mod)):
            if not obj_name.startswith('_') and obj_name not in name_map:
                name_map[obj_name] = full_name
                types.append(f'{obj_name} = {full_name}.{obj_name}')
    with open(f'{base}/modules.pyi', 'w') as f:
        print('# autogenerated by __main__.py do not edit', file=f)
        f.write('\n'.join(types))
    # sip
    modules.append('sip')
    mod = importlib.import_module(f'{QT_WRAPPER}.sip')
    name_map['sip'] = mod.__name__
    name_map['QtWin'] = f'{QT_WRAPPER}.QtWinExtras'
    with open(f'{base}/modules_name_map.py', 'w') as f:
        print('# autogenerated by __main__.py do not edit', file=f)
        print('name_map =', end=' ', file=f)
        pprint(name_map, stream=f)
        print('module_names = frozenset(', end='', file=f)
        pprint(modules, stream=f)
        print(')', file=f)


if __name__ == '__main__':
    scan()
