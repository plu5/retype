name: Build

on:
  workflow_dispatch:

jobs:
  linux-build:
    name: 'Linux'
    runs-on: 'ubuntu-latest'
    container: 
      image: 'ubuntu:16.04'
      options: --user 0
    steps:
      - uses: actions/checkout@v3
      
      - run: pwd
      
      - run: ls -A
      
      - name: Build Python
        run: 'ubuntu-setup-python.sh'
      
      - run: |
          export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib
          python3.7 --version
          
      - if: success() || failure()
        run: python3.7 --version
        
      - if: success() || failure()
        run: |
          ldconfig /usr/local/lib
          python3.7 --version

      - if: success() || failure()
        run: python3.7 --version

#       # from rashidnhmâ€™s snippet @ https://github.com/actions/setup-python/issues/330
#       - id: setup_python
#         uses: actions/setup-python@v3
#         with:
#           python-version: 3.7

#       - id: python_cache
#         uses: actions/cache@v3
#         with:
#           path: venv
#           key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}

#       - name: Install dependencies unless cached
#         if: steps.python_cache.outputs.cache-hit != 'true'
#         run: |
#           # Check if venv exists (restored from secondary keys if any, and delete)
#           if [ -d "venv" ]; then rm -rf venv; fi
#           # Re-create the venv
#           python3 -m venv venv
#           # Install dependencies
#           venv/bin/python3 -m pip install pyinstaller setuptools
#           venv/bin/python3 -m pip install -r requirements.txt

#       - name: Run setup script
#         run: venv/bin/python3 setup.py b -k onedir

#       - run: ls

#       - name: Upload the build artifacts
#         uses: actions/upload-artifact@v3.0.0
#         with:
#           name: retype-1.0.0-linux
#           path: ./dist/retype
#           if-no-files-found: error
#           retention-days: 1
